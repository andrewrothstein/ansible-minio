---
- name: Create minio group ({{ minio_group }}
  become: '{{ minio_privilege_escalate }}'
  become_user: '{{ minio_privilege_escalation_user }}'
  ansible.builtin.group:
    name: '{{ minio_group }}'
    state: present
- name: Create minio user ({{ minio_user }})
  become: '{{ minio_privilege_escalate }}'
  become_user: '{{ minio_privilege_escalation_user }}'
  ansible.builtin.user:
    name: '{{ minio_user }}'
    group: '{{ minio_group }}'
    state: present
- name: Ensure config and volume directories exist
  become: '{{ minio_privilege_escalate }}'
  become_user: '{{ minio_privilege_escalation_user }}'
  with_items:
    - '{{ minio_config_dir }}'
    - '{{ minio_config.volumes }}'
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: '{{ minio_user }}'
    group: '{{ minio_group }}'
    mode: '755'
- name: Configuring TLS
  when: minio_tls.enable
  block:
    - name: Mkdir -p {{ minio_tls_dir }}
      become: '{{ minio_privilege_escalate }}'
      become_user: '{{ minio_privilege_escalation_user }}'
      ansible.builtin.file:
        path: '{{ minio_tls_dir }}'
        state: directory
        mode: '755'
    - name: Install keys/certs
      ansible.builtin.include_role:
        name: andrewrothstein.tls
      vars:
        tls_become: true
        tls_become_user: root
        tls_src: '{{ minio_tls.pki_dir }}'
        tls_dest: '{{ minio_tls_dir }}'
        tls_dest_file_names:
          ca: ca.pem
          cert: public.crt
          key: private.key
        tls_dest_chown:
          owner: '{{ minio_user }}'
          grp: '{{ minio_group }}'
- name: Templatize {{ minio_config_file }}...
  become: '{{ minio_privilege_escalate }}'
  become_user: '{{ minio_privilege_escalation_user }}'
  ansible.builtin.template:
    src: minio.j2
    dest: '{{ minio_config_file }}'
    owner: '{{ minio_user }}'
    group: '{{ minio_group }}'
    mode: '600'
  notify:
    - minio_restart
- ansible.builtin.include_tasks: '{{ minio_init | default("systemd") }}.yml'
- name: Start minio service
  become: '{{ minio_privilege_escalate }}'
  become_user: '{{ minio_privilege_escalation_user }}'
  when: minio_activate
  ansible.builtin.service:
    name: minio
    state: started
    enabled: true
