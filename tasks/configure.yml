---
- name: create minio group ({{ minio_group }}
  become: yes
  become_user: root
  group:
    name: '{{ minio_group }}'
    state: present
- name: create minio user ({{ minio_user }})
  become: yes
  become_user: root
  user:
    name: '{{ minio_user }}'
    group: '{{ minio_group }}'
    state: present
- name: ensure config and volume directories exist
  become: yes
  become_user: root
  with_items:
    - '{{ minio_config_dir }}'
    - '{{ minio_config.volumes }}'
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ minio_user }}'
    group: '{{ minio_group }}'
    mode: 0755
- when: minio_tls.enable
  block:
    - name: mkdir -p {{ minio_tls_dir }}
      become: yes
      become_user: root
      file:
        path: '{{ minio_tls_dir }}'
        state: directory
        mode: 0755
    - name: install keys/certs
      include_role:
        name: andrewrothstein.tls
      vars:
        tls_become: yes
        tls_become_user: root
        tls_src: '{{ minio_tls.pki_dir }}'
        tls_dest: '{{ minio_tls_dir }}'
        tls_dest_file_names:
          ca: ca.pem
          cert: public.crt
          key: private.key
        tls_dest_chmod:
          owner: '{{ minio_user }}'
          grp: '{{ minio_group }}'
      notify: minio_restart
- name: templatize {{ minio_config_file }}...
  become: yes
  become_user: root
  template:
    src: minio.j2
    dest: '{{ minio_config_file }}'
    owner: '{{ minio_user }}'
    group: '{{ minio_group }}'
    mode: 0600
  notify:
    - minio_restart
- include_tasks: '{{ minio_init | default("systemd") }}.yml'
- name: start minio service
  become: yes
  become_user: root
  when: minio_activate
  service:
    name: minio
    state: started
    enabled: yes
